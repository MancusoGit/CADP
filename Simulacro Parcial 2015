program parcialSimuF3;
type

    genero = 1..8;
    
    contadorGenero = array [genero] of real;
    
    pelicula = record
        cod : integer;
        nombre : string;
        gen : genero;
        puntaje : real;
    end;
    
    listaP = ^nodo;
    
    nodo = record
        peli : pelicula;
        sig : listaP;
    end;
    
    critico = record
        dni : integer;
        nombreApellido : string;
        codPeli : integer;
        puntajePeli : real;
    end;
    
//modulos
    
    procedure leerPeli(var p : pelicula);
    begin
        write('ingrese el codigo de la pelicula: ');
        readln(p.cod);
        if (p.cod <> 0) then begin
            write('ingrese el nombre de la pelicula: ');
            readln(p.nombre);
            write('ingrese el genero de la pelicula (1-8) : ');
            readln(p.gen);
        end;
    end;

    procedure agregarAdelante(var l : listaP; p : pelicula);
    var
        nue : listaP;
    begin
        new(nue);
        nue^.peli := p;
        nue^.sig := l;
        l := nue;
    end;
    
    procedure cargarLista(var l : listaP);
    var
        p : pelicula;
    begin
        leerPeli(p);
        while (p.cod <> 0) then begin
            agregarAdelante(l,p);
            leerPeli(p);
        end;
    end;
    
    procedure leerCritica(var c : critico);
    begin
        write('ingrese el codigo de la pelicula : ');
        readln(c.codPeli);
        if (c.codPeli <> -1) then begin
            write('ingrese el dni del critico : ');
            readln(c.dni);
            write('ingrese el nombre y apellido del critico: ');
            readln(c.nombreApellido);
            write('ingrese el puntaje de la pelicula segun el critico: ');
            readln(c.puntajePeli);
        end;
    end;

    function idemParesImpares(n : integer) : boolean;
    var
        dig, cantImpar, cantPar : integer;
    begin
        cantPar := 0 ;
        cantImpar := 0;
        while (n <> 0) do begin
            dig := n mod 10;
            if ((dig mod 2) = 0) then
                cantPar := cantPar + 1;
            else 
                cantImpar := cantImpar + 1;
            n := n div 10;
        end;
        if (cantImpar = cantPar) then
            idemParesImpares := true;
        else
            idemParesImpares := false;
    end;
    
    procedure inicializarContadorGenero(var vg : contadorGenero);
    var
        i : integer;
    begin
        for i := 1 to 8 do begin
            vg[i] := 0;
        end;
    end;
    
    procedure eliminarPeli(var l : listaP; codPelicula : integer);
    var
        act,ant : listaP;
    begin
        act := l;
        ant := l;
        while (act <> nil) and (act^.peli.cod <> codPelicula) do begin
            ant := act;
            act := act^.sig;
        end;
        if (act <> nil) then begin
            if (act = l) then begin
                l := l^.sig;
            end
            else
                ant^.sig := act^.sig;
            dispose(act);
        end;
    end;
    
    procedure ActualizarLista(var l : listaP; codi : integer; puntajeP : real);
    var
        aux : listaP;
    begin
        aux := l;
        while (aux <> nil) and (aux^.peli.cod <> codi) do begin
            aux := aux^.sig;
        end;
        if (aux <> nil) then begin
            aux^.peli.puntaje := puntajeP;
        end;
    end;
    
    procedure listaActualizada(var l : listaP);
    var
        c : critico;
        codAct : integer;
        cantCriticas : integer;
        puntajePromedio : real;
    begin
        leerCritica(c);
        while (c.codPeli <> -1) do begin
            codAct := c.codPeli;
            puntajePromedio := 0;
            cantCriticas := 0;
            while (codAct = c.codPeli) and (c.codPeli <> -1) do begin
                puntajePromedio := puntajePromedio + c.puntajePeli;
                cantCriticas := cantCriticas + 1;
                if (idemParesImpares(c.dni)) then begin
                    writeln(c.nombreApellido);
                end;
                leerCritica(c);
            end;
            puntajePromedio := puntajePromedio / cantCriticas;
            ActualizarLista(l,codAct,puntajePromedio);
        end;
    end;
    
    procedure cargarPuntajeGeneros(var vg : contadorGenero; l : listaP);
    begin
        while (l <> nil) do begin  
            vg[l^.peli.gen] := vg[l^.peli.gen] + l^.peli.puntaje;
            l := l^.sig;
        end;
    end;
    
    procedure generoMayorPuntaje(var maxGenero : integer; vg : contadorGenero);
    var
        i : integer;
        maxPuntaje : real;
    begin
        maxPuntaje := -1;
        for i := 1 to 8 do begin
            if(vg[i] > maxPuntaje) then begin
                maxPuntaje := vg[i];
                maxGenero := i;
            end;
        end;
    end;
    
    
var
    
    pri : listaP;
    generos : contadorGenero;
    maxGenero, codigoPeliEliminar : integer;
    
begin
    pri = nil;
    cargarLista(pri); //se dispose
    inicializarContadorGenero(generos);
    listaActualizada(pri);
    cargarPuntajeGeneros(pri,generos);
    generoMayorPuntaje(generos,maxGenero);
    writeln('el mes que mas monto recaudo fue : ',maxGenero);
    readln(codigoPeliEliminar); //se dispone
    eliminarPeli(pri,codigoPeliEliminar);
end.
    
